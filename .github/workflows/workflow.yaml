name: Docker image build and publish
on:
  workflow_dispatch:
    
  push:
    branches: ["main"]
env:
  TF_LOG: INFO
  AWS_ACCOUNT_ID: ${{ secrets.aws_account_id }}
  AWS_REGION: ${{ secrets.aws_region }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
# concurrency required to avoid terraform lock contention during ECR provisioning
concurrency: ci-${{ github.repository }}-docker-pipeline

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::$AWS_ACCOUNT_ID:role/github_actions_omr_engine_role
          aws-region: $AWS_REGION

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: TF init
        shell: bash
        run: |
          terraform init -upgrade -reconfigure
        working-directory: terraform

      - name: Create ECR repo [TF apply]
        shell: bash
        run: |
          set -eux
          terraform apply \
            -var 'ecr_repo_name=$ECR_REPO_NAME' \
            -var 'aws_region=$AWS_REGION'
            -var 'aws_acc_id=$AWS_ACCOUNT_ID' \
            -auto-approve
        working-directory: terraform

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: bash scripts/build_and_push.sh
          